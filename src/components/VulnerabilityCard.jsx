import { useState } from "react";
import { CSS } from "@dnd-kit/utilities";
import { Trash2, Check } from "lucide-react";

// Severity â†’ Label + Styling
const severityConfig = {
  critical: { label: "Critical", className: "bg-red-600 text-white" },
  high: { label: "High", className: "bg-orange-500 text-white" },
  medium: { label: "Medium", className: "bg-yellow-400 text-black" },
  low: { label: "Low", className: "bg-green-500 text-white" },
};

export const VulnerabilityCard = ({
  vulnerability,
  onDelete,
  onEdit,
  attributes,
  listeners,
  setNodeRef,
  transform,
  transition,
}) => {
  const style = {
    transform: CSS.Transform.toString(transform),
    transition,
  };

  const severity =
    severityConfig[vulnerability.severity?.toLowerCase()] || severityConfig.low;

  const [verified, setVerified] = useState(vulnerability.verified || false);

  const handleVerifiedToggle = () => {
    setVerified((prev) => !prev);
    if (vulnerability.onVerify) vulnerability.onVerify(!verified);
  };

  return (
    <div
      ref={setNodeRef}
      style={style}
      {...attributes}
      {...listeners}
      className="bg-white rounded-2xl shadow p-4 mb-3 cursor-grab active:cursor-grabbing space-y-2 touch-none"

    >
      {/* Top Row: Code + Date + Time + Edit + Delete */}
      <div className="flex justify-between items-center text-xs text-gray-500 font-medium">
        <div>
          <span className="mr-2">{vulnerability.code || "0001"}</span>
          <span>{vulnerability.date}</span>
          <span className="ml-1">{vulnerability.time}</span>
        </div>
        <div className="flex gap-2">
          <button
            onClick={() => onEdit && onEdit(vulnerability)}
            className="text-blue-500 hover:text-blue-700 text-sm"
          >
            Edit
          </button>
          <button onClick={() => onDelete && onDelete(vulnerability.id)}>
            <Trash2 className="w-4 h-4 text-red-500 hover:text-red-700" />
          </button>
        </div>
      </div>

      {/* Title */}
      <h3 className="text-sm font-semibold text-gray-900">
        {vulnerability.title || "Untitled Vulnerability"}
      </h3>

      {/* Severity + Verified tick */}
      <div className="flex justify-between items-center mt-1">
        <span
          className={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${severity.className}`}
        >
          {severity.label}
        </span>

        <button
          className={`w-6 h-6 flex items-center justify-center rounded-full border-2 shadow-md transition-colors ${
            verified
              ? "bg-blue-500 border-blue-500 text-white"
              : "bg-gray-200 border-gray-300 text-gray-400"
          }`}
          onClick={handleVerifiedToggle}
        >
          <Check className="w-3 h-3" />
        </button>
      </div>

      {/* Optional Assignee */}
      {vulnerability.assignee && (
        <div className="mt-3 flex items-center space-x-2">
          <img
            src={`https://api.dicebear.com/6.x/initials/svg?seed=${vulnerability.assignee}`}
            alt={vulnerability.assignee}
            className="w-6 h-6 rounded-full"
          />
          <span className="text-xs text-gray-600">{vulnerability.assignee}</span>
        </div>
      )}
    </div>
  );
};
